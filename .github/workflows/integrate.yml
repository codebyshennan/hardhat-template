name: Solidity CI and Security Static Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - release*/**

jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-22.04, ubuntu-20.04]
        os: [ubuntu-20.04]
        # version: [16, 18, 20]
        version: [18]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        name: Install packages
        with:
          node-version: ${{ matrix.version }}

      # Setup yarn
      - name: Install yarn
        run: npm install -g yarn

      - name: Cache node dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Artifact build
        run: yarn compile

      - name: Unit-Test Contracts
        run: yarn test

      - name: Run Slither
        uses: crytic/slither-action@v0.3.0
        continue-on-error: true
        id: slither
        with:
          target: "contracts/"
          sarif: results.sarif
          fail-on: none # all | low | medium | high

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}

      - name: Run Echidna Fuzzing
        uses: crytic/echidna-action@v2
        with:
          solc-version: 0.8.19
          files: contracts/Lock.sol
          contract: EchidnaContract
          crytic-args: --hardhat-ignore-compile

      - name: Run Mythril
        uses: addnab/docker-run-action@v3
        with:
          registry: hub.docker.io
          image: mythril/myth:latest
          options: -v ${{ github.workspace }}:/contracts
          run: |
            myth analyze Lock.sol

#deploy scripts
